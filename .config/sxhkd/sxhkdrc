#
# wm independent hotkeys
#

# terminal emulator
super + Return
	termite

# windo list
alt + Tab
        rofi -show window -lines 12 -padding 18 -width 60 -location 0 -columns 3 -font "monospace 11"

# turbinated rofi
super + @space
        rofi -modi run,drun,window -lines 12 -padding 18 -width 60 -location 0 -show drun -sidebar-mode -columns 3 -font "monospace 11"

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd | notify-send "SXHKD" "Success reloaded"

# lock screen
ctrl + alt + l
	i3lock-fancy

# print screen
{shift,_} + Print
      maim {-s,_} | \
      xclip -selection clipboard -t image/png; \
      CHOISE=$(echo -e "no\nyes" | dmenu -p "Copy to clipboard. Save to file too?"); \
      case $CHOISE in \
      no) notify-send "Screenshot" "$(date +%s).png copied to clipboard.";; \
      yes) xclip -o ~/Imagens/screenshots/$(date +%s).png && \
           notify-send "Screenshot" "$(date +%s).png saved on ~/Imagens/screenshots/" ;; \
      esac;

# ranger
super + e
      termite -e ranger

# pcmanfm qt
super + shift + e
      pcmanfm-qt

# bc
super + alt + c
	=

# mute volume
XF86AudioMute
        pulseaudio-ctl mute && \
            notify-send "Volume" -t 1000 -i notification-audio-volume-muted "\
                        The volume is $(amixer get Master|tail -n1|sed -E 's/.*\[([a-z]+)\]/\1/')"

# volume control
XF86Audio{Raise,Lower}Volume
        pulseaudio-ctl {up,down} && \
            notify-send "Volume" -t 500 -i notification-audio-volume-medium -h int:value:$(amixer get Master|tail -n1|sed -E 's/.*\[([0-9]+)\%\].*/\1/')

# mute mic
XF86AudioMicMute
	sh -c "if amixer get Capture,0 | grep -q '\[on\]' ; then amixer -q set Capture,0 nocap ; else amixer -q set Capture,0 cap; fi"

# music player control
XF86Audio{Play,Next,Prev,Pause}
        playerctl {play-pause,next,previous,play-pause}

# brightness control
XF86MonBrightness{Up,Down}
	xbacklight {-inc 5%,-dec 5%}

#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {x,y,z}
	bspc node -g {locked,sticky,private}

#
# focus/swap
#

# multiple monitor desktop fucus
super + alt + {_,shift + }{1-9,0}
    bspc {desktop -f, window -d} $(bspc query -M -m)/{a,b,c}

# next monitor
super + alt + w
        bspc monitor -f next

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
